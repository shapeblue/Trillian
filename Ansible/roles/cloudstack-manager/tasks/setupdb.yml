---

#Copyright 2016 ShapeBlue
#
#Licensed under the Apache License, Version 2.0 (the "License");
#you may not use this file except in compliance with the License.
#You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
#Unless required by applicable law or agreed to in writing, software
#distributed under the License is distributed on an "AS IS" BASIS,
#WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#See the License for the specific language governing permissions and
#limitations under the License.

- name: determine number of db hosts
  set_fact: num_db_hosts="{{ groups['mysql_hosts'] | length }}"
  tags:
    - setup_db

- name: set mysql_master_ip
  set_fact: mysql_master_ip={{ (num_db_hosts | int == 0) | ternary("{{ hostvars[groups['primary_cs_manager'][0]]['ansible_ssh_host'] }}","{{ hostvars[groups['mysql_master_host'][0]]['ansible_ssh_host'] }}") }}
  tags:
    - setup_db

- debug: msg="MySQL Master IP is {{ mysql_master_ip }}"
  tags:
    - setup_db

- name: Get MySQL status
  get_db_facts: DBHOST="{{ mysql_master_ip }}" DBUSER="root" DBPASSWORD="{{ mysql_root_password }}"
  tags:
    - setup_db

- debug: msg="{{ env_numversion }}"
  tags:
    - setup_db

- name: test for cloud or cloudstack usage
  stat: path=/usr/bin/cloudstack-setup-databases
  register: path_is_cloudstack
  tags:
  - setup_db

- name: cloudstack-setup-databases
  shell: "/usr/bin/cloudstack-setup-databases 'cloud':'{{ mysql_cloud_password }}'@'{{ mysql_master_ip }}' --deploy-as=root:'{{ mysql_root_password }}' -i {{ ansible_ssh_host }}"
  when: ("primary_cs_manager" in group_names) and ("{{ cloudbd_exists }}" == "no") and (path_is_cloudstack.stat.exists == True)
  tags:
    - setup_db

- name: cloud-setup-databases for older builds
  shell: "/usr/bin/cloud-setup-databases 'cloud':'{{ mysql_cloud_password }}'@'{{ mysql_master_ip }}' --deploy-as=root:'{{ mysql_root_password }}'"
  when: ("primary_cs_manager" in group_names) and ("{{ cloudbd_exists }}" == "no") and (path_is_cloudstack.stat.exists == False)
  tags:
    - setup_db


- name: Refresh Mysql status
  get_db_facts: DBHOST="{{ mysql_master_ip }}" DBUSER="root" DBPASSWORD="{{ mysql_root_password }}"
  register: dbstate
  tags:
    - setup_db

- debug: msg="{{ dbstate }}"

- name: Setup Secondary CloudStack Databases for older builds
  shell: "/usr/bin/cloudstack-setup-databases 'cloud':'{{ mysql_cloud_password }}'@'{{ mysql_master_ip }}'"
  when: ("secondary_cs_manager" in group_names) and (path_is_cloudstack.stat.exists == True)
  tags:
    - setup_db
##and ("{{ ansible_ssh_host }}" not in "{{ [registered_mgmt_ips].[mgmt_ip] }}")

- name: Setup Secondary CloudStack Databases
  shell: "/usr/bin/cloud-setup-databases 'cloud':'{{ mysql_cloud_password }}'@'{{ mysql_master_ip }}'"
  when: ("secondary_cs_manager" in group_names) and (path_is_cloudstack.stat.exists == False)
  tags:
    - setup_db

## run cloudstack-setup-management
- name: Setup management on primary cloudstack management server
  include: ./setup-mgmt.yml
  when: ("primary_cs_manager" in group_names)

- name: Test for API on 8080 on primary management host before configuring secondary
  shell: "curl http://127.0.0.1:8080/client/api --connect-timeout 5"
  register: result
  until: result.stdout.find("unable to verify user") != -1
  retries: 50
  run_once: true

- name: Setup management on additional cloudstack management servers
  include: ./setup-mgmt.yml
  when: ("secondary_cs_manager" in group_names)
