---

#Copyright 2016 ShapeBlue
#
#Licensed under the Apache License, Version 2.0 (the "License");
#you may not use this file except in compliance with the License.
#You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
#Unless required by applicable law or agreed to in writing, software
#distributed under the License is distributed on an "AS IS" BASIS,
#WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#See the License for the specific language governing permissions and
#limitations under the License.


- name: get local facts
  local_action: setup
  tags:
    - vc_config

- name: "wait for vCenter API Service to come up"
  shell: "curl --silent -o /dev/null -w '%{http_code}' {{ hostvars[groups['vc_hosts'][0]]['ansible_ssh_host'] }}/sdk"
  register: result
  until: result.stdout.find("301") != -1
  retries: 60
  delay: 10
  delegate_to: localhost
  tags:
    - vc_config

- name: Ensure Datacenter {{ vmware_datacenter_name }} exists
  local_action: >
        vmware_datacenter
        hostname="{{ hostvars[groups['vc_hosts'][0]]['ansible_ssh_host'] }}" username="{{ vmware_vcsa_user }}" password="{{ vmware_vcsa_pass }}"
        datacenter_name="{{ vmware_datacenter_name }}" state=present validate_certs=false
  delegate_to: localhost
  ignore_errors: true
  tags:
    - vc_config
    - create_vmware_dc

- name: Ensure Cluster {{ env_zone_clustername }} exists
  local_action: >
        vmware_cluster
        hostname="{{ hostvars[groups['vc_hosts'][0]]['ansible_ssh_host'] }}" username="{{ vmware_vcsa_user }}" password="{{ vmware_vcsa_pass }}"
        datacenter_name="{{ vmware_datacenter_name }}"
        cluster_name="{{ env_zone_clustername }}"
        enable_ha=False
        enable_drs=False
        enable_vsan=False
        validate_certs=False
  delegate_to: localhost
  ignore_errors: true
  tags:
    - vc_config
    - create_vmware_cluster
  when: ("{{ vmware_ver }}" != "51u1")

- name: Ensure Cluster {{ env_zone_clustername }} exists
  local_action: >
        vmware_cluster
        hostname="{{ hostvars[groups['vc_hosts'][0]]['ansible_ssh_host'] }}" username="{{ vmware_vcsa_user }}" password="{{ vmware_vcsa_pass }}"
        datacenter_name="{{ vmware_datacenter_name }}"
        cluster_name="{{ env_zone_clustername }}"
        enable_ha=False
        enable_drs=False
        validate_certs=False
  delegate_to: localhost
  ignore_errors: true
  tags:
    - vc_config
    - create_vmware_cluster
  when: ("{{ vmware_ver }}" == "51u1")


- name: add hosts to vCenter
  local_action:
        module: vmware_host
        hostname: "{{ hostvars[groups['vc_hosts'][0]]['ansible_ssh_host'] }}"
        username: "{{ vmware_vcsa_user }}"
        password: "{{ vmware_vcsa_pass }}"
        datacenter_name: "{{ vmware_datacenter_name }}"
        cluster_name: "{{ env_zone_clustername }}"
        esxi_hostname: "{{ hostvars[item]['ansible_ssh_host'] }}"
        esxi_username: "{{ vmware_esxi_username }}"
        esxi_password: "{{ vmware_esxi_password }}"
        state: present
        validate_certs: false
  with_items:
  - "{{ groups['esxi_hosts'] }}"
  delegate_to: localhost
  ignore_errors: true
  tags:
    - vc_config
    - add_vwmare_hosts


- name: Create dvSwitch for guest and public
  local_action:
    module: vmware_dvswitch
    hostname: "{{ hostvars[groups['vc_hosts'][0]]['ansible_ssh_host'] }}"
    username: "{{ vmware_vcsa_user }}"
    password: "{{ vmware_vcsa_pass }}"
    datacenter_name: "{{ vmware_datacenter_name }}"
    switch_name: "{{ esxi_guest_dvs_network_label }}"
    mtu: 1500
    uplink_quantity: 1
    discovery_proto: lldp
    discovery_operation: both
    state: present
    validate_certs: false
  when: esxi_use_dvswitch
  tags:
    - vc_config
    - add_vwmare_hosts
    - add_dvswitch

- name: Create dvSwitch for management
  local_action:
    module: vmware_dvswitch
    hostname: "{{ hostvars[groups['vc_hosts'][0]]['ansible_ssh_host'] }}"
    username: "{{ vmware_vcsa_user }}"
    password: "{{ vmware_vcsa_pass }}"
    datacenter_name: "{{ vmware_datacenter_name }}"
    switch_name: "{{ esxi_mgmt_dvs_network_label }}"
    mtu: 1500
    uplink_quantity: 1
    discovery_proto: lldp
    discovery_operation: both
    state: present
    validate_certs: false
  when: esxi_use_mgmt_dvswitch
  tags:
    - vc_config
    - add_vwmare_hosts
    - add_dvswitch

- name: Add dvSwitch management port group
  local_action:
    module: vmware_dvs_portgroup
    hostname: "{{ hostvars[groups['vc_hosts'][0]]['ansible_ssh_host'] }}"
    username: "{{ vmware_vcsa_user }}"
    password: "{{ vmware_vcsa_pass }}"
    portgroup_name: "Management Network"
    switch_name: "{{ esxi_mgmt_dvs_network_label }}"
    vlan_id: 0
    num_ports: 120
    portgroup_type: earlyBinding
    state: present
    validate_certs: false
  when: esxi_use_mgmt_dvswitch
  tags:
    - vc_config
    - add_vwmare_hosts
    - add_dvswitch

- name: Add Host to dvSwitch for guest public only (management done separately)
  local_action:
    module: vmware_dvs_host
    hostname: "{{ hostvars[groups['vc_hosts'][0]]['ansible_ssh_host'] }}"
    username: "{{ vmware_vcsa_user }}"
    password: "{{ vmware_vcsa_pass }}"
    esxi_hostname: "{{ hostvars[item]['ansible_ssh_host'] }}"
    switch_name: "{{ esxi_guest_dvs_network_label }}"
    vmnics:
        - vmnic1
    state: present
    validate_certs: false
  with_items:
    - "{{ groups['esxi_hosts'] }}"
  when: esxi_use_dvswitch
  tags:
    - vc_config
    - add_vwmare_hosts
    - add_dvswitch

- name: List ESXi host IP addresses
  set_fact:
    esxilist: |
      {%- for item in groups[ 'esxi_hosts' ] -%}
        {{ hostvars[item]['ansible_ssh_host'] }}
        {%- if not loop.last -%},{%- else -%}{%- endif -%}
      {%- endfor -%}
  when: esxi_use_mgmt_dvswitch

- name: Move host management networking to dvSwitch
  local_action: shell /usr/bin/pwsh {{ inventory_dir }}/roles/vsphere/files/esxi-dvs-mgmt.ps1 -vchost "{{ hostvars[groups['vc_hosts'][0]]['ansible_ssh_host'] }}" -vcuser "{{ vmware_vcsa_user }}" -vcpass "{{ vmware_vcsa_pass }}" -esxihosts "{{ esxilist | trim }}" -dvswitchname "{{ esxi_mgmt_dvs_network_label }}"
  when: esxi_use_mgmt_dvswitch
