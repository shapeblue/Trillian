---

- include: ./install_marvin_prereqs.yml


- name: Set repo to install PR tests from
  template: src=cloudstack.repo.j2 dest=/etc/yum.repos.d/cloudstack.repo
  tags:
    - marvin
    - marvin_cfg

- name: Determine if Marvin Package availble from this repo
  package_available: PACKAGE=cloudstack-marvin
  register: marvin_package_check
  ignore_errors: true

- debug: msg="{{ marvin_package_check }}"

- name: If cloudstack-marvin package does not exist, add fallback repo
  template: src=marvin.repo.j2 dest=/etc/yum.repos.d/cloudstack.repo
  when: ("{{ mypackage_available }}" == "false")

- name: Install Marvin package
  yum: name=cloudstack-marvin state=present
  tags:
    - marvin
    - marvin_cfg

- name: Ensure integration test packages are installed
  yum: name=cloudstack-integration-tests state=present
  tags:
    - marvin
    - marvin_cfg

- name: Install nose
  easy_install: name=nose
  tags:
    - marvin

- name: retrieve environment data
  env_db_manage: DBHOST={{ env_db_ip }} DBUSER={{ env_db_user }} DBPASS={{ env_db_password }} DBNAME={{ env_db_name }} ENV_UUID={{ env_uuid }} ENV_NAME={{ env_name_clean }} ENV_ZONETYPE={{ env_zonetype }} ENV_ACTION=retrieve
  tags:
    - marvin
    - marvin_cfg

- name: clear marvin dirs if exists
  file: path="{{ item }}" state=absent
  with_items:
    - "/marvin"
  tags:
    - marvin
    - marvin_cfg

- name: create Marvin dirs if required
  file: path="{{ item }}" state=directory
  with_items:
    - "/marvin"
    - "/marvin/tools"
    - "/marvin/error"
    - "/marvin/pass"
  tags:
    - marvin
    - marvin_cfg

- name: Retrieve cloud SSH keys from mgmt server
  shell: "sshpass -p '{{ hostvars[groups['primary_cs_manager'][0]]['ansible_ssh_pass'] }}' scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null root@{{ hostvars[groups['primary_cs_manager'][0]]['ansible_ssh_host'] }}:/usr/share/cloudstack-common/scripts/vm/systemvm/id_rsa.cloud ~/.ssh/id_rsa.cloud"
  tags:
    - marvin
    - marvin_cfg
  ignore_errors: yes

- name: copy tests
  command: cp -r /usr/share/cloudstack-integration-tests /marvin/tests
  tags:
    - marvin
    - marvin_cfg

- name: create mavin cfg file
  template: src=advanced-cfg.j2 dest="/marvin/{{ env_name_clean }}-advanced-cfg"
  tags:
    - marvin
    - marvin_cfg

- name: copy travis xunit parser
  copy: src=xunit-reader.py dest=/marvin/tools/xunit-reader.py
  tags:
    - marvin
    - marvin_cfg

- name: remove orginal test_data files
  file: path="{{ item }}" state=absent
  with_items:
    - "/usr/lib/python2.7/site-packages/marvin/config/test_data.pyc"
    - "/usr/lib/python2.7/site-packages/marvin/config/test_data.py"
  tags:
    - marvin
    - marvin_cfg

- name: create templated test_data.py
  template: src=test_data.py.j2 dest=/marvin/test_data.py
  tags:
    - marvin
    - marvin_cfg

- name: create symlink to test_data.py
  file: src=/marvin/test_data.py dest=/usr/lib/python2.7/site-packages/marvin/config/test_data.py state=link mode=0644
  tags:
    - marvin
    - marvin_cfg

- name: create smoketest file
  template: src="smoketests.sh.j2" dest="/marvin/smoketests.sh" mode=0755
  tags:
    - marvin
    - marvin_cfg

- name: create componenttest file
  template: src="componenttests.sh.j2" dest="/marvin/componenttests.sh" mode=0755
  tags:
    - marvin
    - marvin_cfg

- name: create additional tests file
  template: src="additionaltests.sh.j2" dest="/marvin/additionaltests.sh" mode=0755
  tags:
    - marvin
    - marvin_cfg

- name: create marvintest file
  template: src="marvintest.sh.j2" dest="/marvin/marvintest.sh" mode=0755
  tags:
    - marvin
    - marvin_cfg
    - mavintest

- name: add test result collation script
  copy: src="collate_results.sh" dest="/marvin/collate_results.sh" mode=0755
  tags:
    - marvin
    - marvin_cfg
    - mavintest

- include: ./fix_tests.yml
  when: fixtests
