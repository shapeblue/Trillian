---


- name: wait for VM to be alive
  shell: "ping {{ ansible_ssh_host }} -c 1"
  register: pong
  until: pong.rc == 0
  retries: "{{ ssh_retries }}"

- name: Wait for SSH
  local_action: wait_for port=22 host="{{ ansible_ssh_host }}" timeout={{ ssh_retries }} connect_timeout=5
  tags:
    - kvm

- name: Now I'm connected, get facts
  setup:
  tags:
    - kvm

- name: Ensure selinux python bindings are installed
  yum: name=libselinux-python state=present

- name: Ensure selinux python3 bindings are installed
  yum: name=libselinux-python3 state=present

- name: Put SELinux in permissive mode, logging actions that would be blocked.
  selinux:
    policy: targeted
    state: permissive

- name: set live selinux
  command: setenforce permissive

- name: sync time with mgmt server
  shell: date --set=`sshpass -p 'P@ssword123' ssh -o StrictHostKeyChecking=no root@{{ hostvars[groups['primary_cs_manager'][0]]['ansible_ssh_host'] }} 'date --iso-8601=seconds'`

- name: restart machine for clean time application
  command: sleep 2 && /sbin/shutdown -r now "set time"
  async: 1
  poll: 0
  ignore_errors: true

- name: waiting 60 secs for server to come back
  become: false
  local_action: wait_for host={{ ansible_ssh_host }} port=22 state=started delay=60 timeout=300

- include: ./install_marvin_prereqs.yml

- name: Set repo to install PR tests from
  template: src=cloudstack.repo.j2 dest=/etc/yum.repos.d/cloudstack.repo
  tags:
    - marvin
    - marvin_cfg
  when: not force_marvin_fallback

- name: Determine if Marvin Package available from this repo
  package_available: PACKAGE=cloudstack-marvin
  register: marvin_package_check
  ignore_errors: true
  when: not force_marvin_fallback

- debug: msg="{{ marvin_package_check }}"
  when: not force_marvin_fallback

- name: If cloudstack-marvin package does not exist, add fallback repo
  template: src=marvin.repo.j2 dest=/etc/yum.repos.d/cloudstack.repo
  when: ("{{ mypackage_available }}" == "false") or (force_marvin_fallback)

- name: Install Marvin package
  yum: name=cloudstack-marvin state=present
  tags:
    - marvin
    - marvin_cfg

- name: Ensure integration test packages are installed
  yum: name=cloudstack-integration-tests state=present
  tags:
    - marvin
    - marvin_cfg

- name: Install wheel
  pip:
    name: wheel
  tags:
    - marvin

- name: Install nose
  pip:
    name: nose
  tags:
    - marvin

- name: retrieve environment data
  env_db_manage: DBHOST={{ env_db_ip }} DBUSER={{ env_db_user }} DBPASS={{ env_db_password }} DBNAME={{ env_db_name }} ENV_UUID={{ env_uuid }} ENV_NAME={{ env_name_clean }} ENV_ZONETYPE={{ env_zonetype }} ENV_SECGROUPS={{ env_zone_secgroups }} ENV_ACTION=retrieve
  tags:
    - marvin
    - marvin_cfg

- name: clear marvin dirs if exists
  file: path="{{ item }}" state=absent
  with_items:
    - "/marvin"
  tags:
    - marvin
    - marvin_cfg

- name: create Marvin dirs if required
  file: path="{{ item }}" state=directory
  with_items:
    - "/marvin"
    - "/marvin/tools"
    - "/marvin/error"
    - "/marvin/pass"
  tags:
    - marvin
    - marvin_cfg

- name: Retrieve cloud SSH keys from mgmt server
  shell: "sshpass -p '{{ hostvars[groups['primary_cs_manager'][0]]['ansible_ssh_pass'] }}' scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null root@{{ hostvars[groups['primary_cs_manager'][0]]['ansible_ssh_host'] }}:/usr/share/cloudstack-common/scripts/vm/systemvm/id_rsa.cloud ~/.ssh/id_rsa.cloud"
  tags:
    - marvin
    - marvin_cfg
  ignore_errors: yes

- name: copy tests
  command: cp -r /usr/share/cloudstack-integration-tests /marvin/tests
  tags:
    - marvin
    - marvin_cfg

- name: create mavin cfg file
  template: src=advanced-cfg.j2 dest="/marvin/{{ env_name_clean }}-advanced-cfg"
  tags:
    - marvin
    - marvin_cfg

- name: copy travis xunit parser
  copy: src=xunit-reader.py dest=/marvin/tools/xunit-reader.py
  tags:
    - marvin
    - marvin_cfg

- name: remove orginal test_data files
  file: path="{{ item }}" state=absent
  with_items:
    - "/usr/lib/python2.7/site-packages/marvin/config/test_data.pyc"
    - "/usr/lib/python2.7/site-packages/marvin/config/test_data.py"
    - "/usr/local/lib/python3.6/site-packages/marvin/config/test_data.pyc"
    - "/usr/local/lib/python3.6/site-packages/marvin/config/test_data.py"
  tags:
    - marvin
    - marvin_cfg

- name: create templated test_data.py
  template: src=test_data.py.j2 dest=/marvin/test_data.py
  tags:
    - marvin
    - marvin_cfg

- name: Check if marvin is installed in python3
  stat: path=/usr/lib/python2.7/site-packages/marvin/
  register: marvin2

- name: create symlink to test_data.py
  file: src=/marvin/test_data.py dest=/usr/lib/python2.7/site-packages/marvin/config/test_data.py state=link mode=0644
  when: marvin2.stat.exists == true
  tags:
    - marvin
    - marvin_cfg

- name: Check if marvin is installed in python3
  stat: path=/usr/local/lib/python3.6/site-packages/marvin/
  register: marvin3

- name: create python3 symlink to test_data.py
  file: src=/marvin/test_data.py dest=/usr/local/lib/python3.6/site-packages/marvin/config/test_data.py state=link mode=0644
  when: marvin3.stat.exists == true
  tags:
    - marvin
    - marvin_cfg

- name: create smoketest file
  template: src="smoketests.sh.j2" dest="/marvin/smoketests.sh" mode=0755
  tags:
    - marvin
    - marvin_cfg

- name: create componenttest file
  template: src="componenttests.sh.j2" dest="/marvin/componenttests.sh" mode=0755
  tags:
    - marvin
    - marvin_cfg

- name: create additional tests file
  template: src="additionaltests.sh.j2" dest="/marvin/additionaltests.sh" mode=0755
  tags:
    - marvin
    - marvin_cfg

- name: create marvintest file
  template: src="runtests.sh.j2" dest="/marvin/runtests.sh" mode=0755
  tags:
    - marvin
    - marvin_cfg
    - mavintest

- name: add test result collation script
  copy: src="collate_results.sh" dest="/marvin/collate_results.sh" mode=0755
  tags:
    - marvin
    - marvin_cfg
    - mavintest

- name: add upload results to elasticsearch script
  copy: src="upload_to_es.sh" dest="/marvin/upload_to_es.sh" mode=0755
  tags:
    - marvin
    - marvin_cfg
    - mavintest


- name: add extra config data file
  template: src="additional_test_data.json.j2" dest="/marvin/additional_test_data.json" mode=0644
  tags:
    - marvin
    - marvin_cfg

- name: add test result collation script
  template: src="process_json_results.sh.j2" dest="/marvin/process_json_results.sh" mode=0755
  tags:
    - marvin
    - marvin_cfg
    - mavintest

- name: Write testuuid file
  template:
    src: testuuid.j2
    dest: "/marvin/testuuid"
    mode: 0755
  tags:
    - marvin
    - marvin_cfg

- include: ./fix_tests.yml
  when: fixtests
