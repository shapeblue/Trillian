---

#Copyright 2016 ShapeBlue
#
#Licensed under the Apache License, Version 2.0 (the "License");
#you may not use this file except in compliance with the License.
#You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
#Unless required by applicable law or agreed to in writing, software
#distributed under the License is distributed on an "AS IS" BASIS,
#WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#See the License for the specific language governing permissions and
#limitations under the License.

- name: Install iSCSI target packages
  dnf:
    name: "{{ item }}"
    state: present
  with_items:
    - targetcli
    - iscsi-initiator-utils
  tags:
    - marvin
    - marvin_iscsi

- name: Ensure configfs is mounted
  mount:
    path: /sys/kernel/config
    src: configfs
    fstype: configfs
    state: mounted
  tags:
    - marvin
    - marvin_iscsi

- name: Stop target service if running (to clear any existing config)
  systemd:
    name: target
    state: stopped
  ignore_errors: yes
  tags:
    - marvin
    - marvin_iscsi

- name: Unload iscsi_target_mod kernel module (to reset target subsystem)
  modprobe:
    name: iscsi_target_mod
    state: absent
  ignore_errors: yes
  tags:
    - marvin
    - marvin_iscsi

- name: Unload target_core_mod kernel module (to reset target subsystem)
  modprobe:
    name: target_core_mod
    state: absent
  ignore_errors: yes
  tags:
    - marvin
    - marvin_iscsi

- name: Remove any leftover iSCSI target configuration from configFS
  shell: |
    if [ -d /sys/kernel/config/target/iscsi ]; then
      for target in /sys/kernel/config/target/iscsi/iqn.* 2>/dev/null; do
        if [ -d "$target" ]; then
          echo "Removing leftover target: $(basename $target)"
          # Remove TPGs
          for tpg in "$target"/tpgt_* 2>/dev/null; do
            if [ -d "$tpg" ]; then
              # Remove LUNs
              for lun in "$tpg"/lun/lun_* 2>/dev/null; do
                [ -d "$lun" ] && rmdir "$lun" 2>/dev/null || true
              done
              # Remove ACLs
              for acl in "$tpg"/acls/* 2>/dev/null; do
                [ -d "$acl" ] && rmdir "$acl" 2>/dev/null || true
              done
              # Remove portals
              for portal in "$tpg"/np/* 2>/dev/null; do
                [ -d "$portal" ] && rmdir "$portal" 2>/dev/null || true
              done
              rmdir "$tpg" 2>/dev/null || true
            fi
          done
          rmdir "$target" 2>/dev/null || true
        fi
      done
    fi
  ignore_errors: yes
  tags:
    - marvin
    - marvin_iscsi

- name: Reload target_core_mod kernel module
  modprobe:
    name: target_core_mod
    state: present
  tags:
    - marvin
    - marvin_iscsi

- name: Reload iscsi_target_mod kernel module
  modprobe:
    name: iscsi_target_mod
    state: present
  tags:
    - marvin
    - marvin_iscsi

- name: Clear any existing targetcli configuration
  shell: targetcli clearconfig confirm=true
  ignore_errors: yes
  tags:
    - marvin
    - marvin_iscsi

- name: Create iSCSI storage directory
  file:
    path: /var/iscsi_disks
    state: directory
    mode: '0755'
  tags:
    - marvin
    - marvin_iscsi

- name: Create test iSCSI backstore
  shell: targetcli backstores/fileio create test-lun /var/iscsi_disks/test-lun.img 10G write_back=false
  args:
    creates: /var/iscsi_disks/test-lun.img
  tags:
    - marvin
    - marvin_iscsi

- name: Parse iSCSI target IQN (strip /LUN suffix if present)
  set_fact:
    iscsi_target_iqn: "{{ env_iscsi_test_target | regex_replace('/[0-9]+$', '') }}"
  tags:
    - marvin
    - marvin_iscsi

- name: Create iSCSI target
  shell: targetcli iscsi/ create {{ iscsi_target_iqn }}
  register: create_target_result
  failed_when: create_target_result.rc != 0 and 'already exists' not in create_target_result.stderr
  changed_when: create_target_result.rc == 0
  tags:
    - marvin
    - marvin_iscsi

- name: Configure target TPG attributes
  shell: targetcli iscsi/{{ iscsi_target_iqn }}/tpg1 set attribute {{ item }}
  with_items:
    - "authentication=0"
    - "generate_node_acls=1"
    - "cache_dynamic_acls=1"
  register: set_attribute_result
  failed_when: set_attribute_result.rc != 0 and 'Cannot locate' not in set_attribute_result.stderr
  changed_when: set_attribute_result.rc == 0
  tags:
    - marvin
    - marvin_iscsi

- name: Create LUN in target
  shell: targetcli iscsi/{{ iscsi_target_iqn }}/tpg1/luns/ create /backstores/fileio/test-lun
  register: create_lun_result
  failed_when: create_lun_result.rc != 0 and 'already exists' not in create_lun_result.stderr
  changed_when: create_lun_result.rc == 0
  tags:
    - marvin
    - marvin_iscsi

- name: Save targetcli configuration
  shell: targetcli saveconfig
  tags:
    - marvin
    - marvin_iscsi

- name: Ensure iSCSI target service is enabled and started
  systemd:
    name: target
    state: started
    enabled: true
  tags:
    - marvin
    - marvin_iscsi

- name: Open firewall for iSCSI
  firewalld:
    port: 3260/tcp
    permanent: yes
    state: enabled
    immediate: yes
  ignore_errors: yes
  tags:
    - marvin
    - marvin_iscsi
