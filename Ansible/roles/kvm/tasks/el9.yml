---

#Copyright 2016 ShapeBlue
#
#Licensed under the Apache License, Version 2.0 (the "License");
#you may not use this file except in compliance with the License.
#You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
#Unless required by applicable law or agreed to in writing, software
#distributed under the License is distributed on an "AS IS" BASIS,
#WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#See the License for the specific language governing permissions and
#limitations under the License.

- debug:
    msg: "EL9 Specific KVM host Build"

- name: Ensure selinux python bindings are installed (Ansible requirement)
  dnf:
    name: python3-libselinux
    state: present
  tags:
    - kvm

- name: Set selinux to permissive
  command: setenforce permissive
  changed_when: false
  tags:
    - kvm

- name: Ensure selinux is set permanently
  selinux: policy=targeted state=permissive
  tags:
    - kvm

- name: Clear all dnf cache
  command: dnf clean all
  tags:
    - kvm

- name: change cockpit port
  lineinfile:
    path: /usr/lib/systemd/system/cockpit.socket
    regexp: '^ListenStream='
    line: ListenStream=9091

- name: reload daemon
  command: systemctl daemon-reload

- name: stop cockpit service
  systemd:
    name: cockpit
    state: stopped

- include: ./kvm_networking_bridge8.yml
  when: (not use_phys_hosts) and (kvm_network_mode == "bridge")

- include: ./kvm_networking_ovs.yml
  when: (not use_phys_hosts) and (kvm_network_mode == "ovs")

- name: wait for ssh
  local_action: wait_for port=22 host="{{ ansible_ssh_host }}" timeout={{ ssh_retries }} connect_timeout=5
  when: (not use_phys_hosts)

- include: ./kvm_networking_phys_host.yml
  when: use_phys_hosts

- name: set dnf repo to local
  template: src="{{ inventory_dir }}/templates/{{ item }}.j2" dest="/etc/yum.repos.d/{{item}}"
  with_items:
    - "epel.repo"
  tags:
    - kvm

- name: Install basic utilities and tools - all versions
  dnf: name={{ item }} state=present enablerepo=base
  with_items:
    - bind-utils
    - chrony
    - openssh-clients
    - pciutils
    - telnet
    - tcpdump
    - traceroute
    - nano
    - rpcbind
    - parted
    - vim
    - python3-pip
  tags:
    - kvm

- name: install python-argparse
  pip:
    name: argparse
    state: present
  tags:
    - kvm

- name: Firewalld for EL9
  dnf: name={{ item }} state=present enablerepo=base
  with_items:
    - firewalld
  tags:
    - kvm
  when: ( ansible_distribution_major_version|int >= 7 ) and use_firewalld

- name: Start firewalld EL9
  shell: systemctl enable firewalld && systemctl start firewalld
  when: ( ansible_distribution_major_version|int >= 7 ) and use_firewalld

- name: Stop firewalld EL9
  shell: systemctl disable firewalld && systemctl stop firewalld
  when: ( ansible_distribution_major_version|int >= 7 ) and (use_firewalld|bool == False)

- include: ./add_local_storage.yml
  when: use_local_storage
  tags:
    - kvm

- name: ensure rpcbind in started
  shell: systemctl enable rpcbind && systemctl start rpcbind

- debug: msg="Set Java on VM"
- set_fact: java_ver="{{ kvm_java_ver }}"
- set_fact: java_path="{{ kvm_java_path }}"
- include: ../../../tasks/set_java.yml
  when: force_java

- name: Upgrade gcrypt library on EL9 KVM hosts
  shell: "dnf install -y libgcrypt"

- include: ./centos-acs.yml
  when: env_cs_distribution == "cs"

- include: ./centos-ccp.yml
  when: env_cs_distribution == "ccp"

- name: Update libvirtd.conf - listen_tls
  lineinfile: dest=/etc/libvirt/libvirtd.conf regexp={{ item.regexp }} line={{ item.line }}  state=present
  with_items:
    - { regexp: "listen_tls", line: "listen_tls = 0" }
    - { regexp: "listen_tcp", line: "listen_tcp = 1" }
    - { regexp: "tcp_port", line: "tcp_port = \"16509\"" }
    - { regexp: "auth_tcp", line: "auth_tcp = \"none\"" }
    - { regexp: "mdns_adv", line: "mdns_adv = 0" }
  tags:
    - kvm
    - kvm-agent

- name: Create file /etc/sysconfig/libvirtd - LIBVIRTD_ARGS
  template: src=libvirtd.j2 dest=/etc/sysconfig/libvirtd
  tags:
    - kvm
    - kvm-agent

- name: Mask libvirtd sockets
  shell: systemctl mask libvirtd.socket libvirtd-ro.socket libvirtd-admin.socket libvirtd-tls.socket libvirtd-tcp.socket

- name: Mask virtqemu sockets
  shell: systemctl mask virtqemud.socket virtqemud-ro.socket virtqemud-admin.socket virtqemud virtnetworkd virtstoraged

- name: Update /etc/libvirt/qemu.conf
  lineinfile: dest=/etc/libvirt/qemu.conf regexp='vnc_listen' line='vnc_listen = "0.0.0.0"' state=present
  tags:
    - kvm
    - kvm-agent

- name: Add iptables rules
  shell: "iptables -I INPUT -p tcp -m tcp --dport {{ item }} -j ACCEPT"
  with_items:
    - "22"
    - "1798"
    - "16509"
    - "5900:6100"
    - "49152:49216"
  when: ansible_distribution_major_version == "6" or not use_firewalld
  tags:
    - kvm
    - kvm-agent

- name: Add iptables rules
  shell: "firewall-cmd --zone=public --add-port={{ item }}/tcp --permanent"
  with_items:
    - "22"
    - "1798"
    - "16509"
    - "5900-6100"
    - "49152-49216"
  when: ( ansible_distribution_major_version|int >= 7 ) and use_firewalld
  tags:
    - kvm
    - kvm-agent

- name: IPtables save config
  shell: "iptables-save > /etc/sysconfig/iptables"
  when: ansible_distribution_major_version == "6" or not use_firewalld
  tags:
    - kvm
    - kvm-agent

- name: load updated config
  shell: "firewall-cmd --reload"
  when: ( ansible_distribution_major_version|int >= 7 ) and use_firewalld
  tags:
    - kvm
    - kvm-agent

- name: KVM libvirtd restarted
  shell: systemctl restart libvirtd
  tags:
    - kvm
    - kvm-agent

- name: Check for authorized_keys presence
  stat: path=/root/.ssh/authorized_keys
  register: authkeys_present

- name: Enable the root user because Cloudstack uses root account to add host
  shell: "sed -i 's/^.*\\(ssh-rsa .*$\\)/\\1/' /root/.ssh/authorized_keys"
  when: authkeys_present.stat.exists == True

- name: Change password for KVM host (usually root password)
  shell: "echo {{ kvm_password }} | passwd {{ kvm_username }} --stdin"

- include: ./centos_elrepokernel.yml
# when: kvm_install_elrepo_kernel
  tags:
    - kvm
