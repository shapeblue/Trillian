---

#Copyright 2016 ShapeBlue
#
#Licensed under the Apache License, Version 2.0 (the "License");
#you may not use this file except in compliance with the License.
#You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
#Unless required by applicable law or agreed to in writing, software
#distributed under the License is distributed on an "AS IS" BASIS,
#WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#See the License for the specific language governing permissions and
#limitations under the License.

- name: wait for VM to be alive
  shell: "ping {{ ansible_ssh_host }} -c 1"
  register: pong
  until: pong.rc == 0
  retries: "{{ ssh_retries }}"
  delegate_to: localhost

- name: Wait for SSH
  local_action: wait_for port=22 host="{{ ansible_ssh_host }}" timeout={{ ssh_retries }} connect_timeout=5

- name: symlink /usr/bin/python -> /usr/bin/python3
  raw: |
    if [ -f /usr/bin/python3 ] && [ ! -f /usr/bin/python ]; then
      ln --symbolic /usr/bin/python3 /usr/bin/python;
    fi
  become: true

- name: Now Im connected, get facts
  setup:

- name: Create {{ kvm_mgmt_network_label }} bridge interface
  command: nmcli con add ifname {{ kvm_mgmt_network_label }} type bridge con-name {{ kvm_mgmt_network_label }} autoconnect yes

- name: Add interfaces to bridge
  command: nmcli con add type bridge-slave ifname eth0 master {{ kvm_mgmt_network_label }} autoconnect yes con-name br-eth0

- name: bring up bridge
  command: nmcli connection up {{ kvm_mgmt_network_label }}

- name: get name of eth0 connection
  shell: nmcli device show eth0 | grep 'GENERAL.CONNECTION' | awk -F ':' '{print $2}' | sed 's/^ *//'
  register: eth0_name

- name: delete old eth0
  command: nmcli connection delete '{{ eth0_name.stdout }}'

- name: wait for VM to be alive

  shell: "ping {{ ansible_ssh_host }} -c 1"
  register: pong
  until: pong.rc == 0
  retries: "{{ ssh_retries }}"
  delegate_to: localhost

- name: Wait for SSH
  local_action: wait_for port=22 host="{{ ansible_ssh_host }}" timeout={{ ssh_retries }} connect_timeout=5

- name: Create {{ kvm_guest_network_label }} bridge interface
  command: nmcli con add ifname {{ kvm_guest_network_label }} type bridge con-name {{ kvm_guest_network_label }} autoconnect yes ipv4.method manual ipv4.addresses '192.168.255.254/30'

- pause:
    seconds: 2

- name: get name of eth1 connection
  shell: nmcli device show eth1 | grep 'GENERAL.CONNECTION' | awk -F ':' '{print $2}' | sed 's/^ *//'
  register: eth1_name

- pause:
    seconds: 2

- name: delete old eth1
  command: nmcli connection delete '{{ eth1_name.stdout }}'

- pause:
    seconds: 2

- name: Add interfaces to bridge
  command: nmcli con add type bridge-slave ifname eth1 master {{ kvm_guest_network_label }} autoconnect yes con-name br-eth1

- pause:
    seconds: 2
    
- name: Bring up interface
  command: nmcli connection up br-eth1

- pause:
    seconds: 2

- name: Bring up bridge
  command: nmcli connection up {{ kvm_guest_network_label }}

- pause:
    seconds: 2

- name: echo out nmcli for confirmation
  command: nmcli conn show

