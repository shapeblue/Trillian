#!/bin/bash

ARGS="(`cat $1`)"
INPUTSTRING=`echo $ARGS | tr " " "\n"| awk -F= '$1=="versionstring"{print $2}'| tr -d '"' | sed -e 's/[[:space:]]*$//'`
ISUPGRADE=`echo $ARGS | tr " " "\n"| awk -F= '$1=="isupgrade"{print $2}'| tr -d '"' | sed -e 's/[[:space:]]*$//'`

if [[ "${ISUPGRADE,,}" == "true" ]] || [[ "${ISUPGRADE,,}" == "yes" ]]; then
  PREFIX_STR="upgrade"
else
  PREFIX_STR="env"
fi

if [ -z $INPUTSTRING ]; then
echo "nothing to do"
else
  if [[ "${INPUTSTRING}" == *"-"* ]]; then
    VERSIONSTRING="$INPUTSTRING"
  else
    VERSIONSTRING=`echo $INPUTSTRING | awk -F "-" '{print $1}'`
  fi
  
  re='[a-zA-Z]'
  if [[ "${VERSIONSTRING:1}" =~ $re ]]; then 
    if [[ "${VERSIONSTRING}" = "CCP"* ]] || [[ "${VERSIONSTRING}" == "ACP"* ]] || [[ "${VERSIONSTRING}" = "ccp"* ]] || [[ "${VERSIONSTRING}" == "acp"* ]]; then
      DISTRIBUTION="ccp"
      VERSIONNUM="${VERSIONSTRING:3}"
    else
      DISTRIBUTION="cs"
      if [[ "${VERSIONSTRING,,}" == "cs"* ]]; then
        VERSIONNUM="${VERSIONSTRING:2}"
      else
        VERSIONNUM="${VERSIONSTRING:3}"
      fi
    fi
  else
    DISTRIBUTION="cs"
    VERSIONNUM=${VERSIONSTRING}
  fi

  VERSIONDEPTH=$((`echo "${VERSIONNUM}" | awk -F "." '{print NF-1}'`))
  L_ONE=`echo $VERSIONNUM | awk -F "." '{print $1}'`
  L_TWO=`echo $VERSIONNUM | awk -F "." '{print $2}'`
  NUMERIC_VERSION=`echo $L_ONE.$L_TWO`
  DOT_THREE=""
  L_THREE=""
  L_FOUR=""

  if [[ "$VERSIONDEPTH" == "2" ]]; then
    L_THREE=`echo $VERSIONNUM | awk -F "." '{print $3}'`
    L_FOUR=""
    NUMERIC_VERSION=`echo $L_ONE.$L_TWO.$L_THREE`
    DOT_THREE="."
    DOT_FOUR=""
  fi

  if [[ "$VERSIONDEPTH" == "3" ]]; then
    L_THREE=`echo $VERSIONNUM | awk -F "." '{print $3}'`
    L_FOUR=`echo $VERSIONNUM | awk -F "." '{print $4}'`
    NUMERIC_VERSION=`echo $L_ONE.$L_TWO.$L_THREE.$L_FOUR`
    DOT_THREE="."
    DOT_FOUR="."
  fi
fi

cat << EOF
{
"ansible_facts": {
  "${PREFIX_STR}_cs_distribution": "${DISTRIBUTION}",
  "${PREFIX_STR}_cs_numeric_version": "${NUMERIC_VERSION}",
  "${PREFIX_STR}_cs_major_version": "${L_ONE}",
  "${PREFIX_STR}_cs_minor_version": "${L_ONE}.${L_TWO}",
  "${PREFIX_STR}_cs_subminor_version": "${L_ONE}.${L_TWO}${DOT_THREE}${L_THREE}",
  "${PREFIX_STR}_cs_security_version": "${L_ONE}.${L_TWO}${DOT_THREE}${L_THREE}${DOT_FOUR}${L_FOUR}",
  "${PREFIX_STR}_version": "${DISTRIBUTION}${L_ONE}${L_TWO}${L_THREE}${L_FOUR}",
  "${PREFIX_STR}_repo_version_var": "${L_ONE}.${L_TWO}",
  "${PREFIX_STR}_cs_minor_version_string": "${DISTRIBUTION}${L_ONE}${L_TWO}",
  "env_return": "success",
  "env_retmsg": "Data successfully returned."
 }
}
EOF

exit
